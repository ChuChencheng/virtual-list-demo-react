{"version":3,"sources":["components/Counter.tsx","components/FixedHeight.tsx","hooks/useFixedHeightVirtualList.ts","utils/binary-search.ts","components/PropHeight.tsx","hooks/usePropHeightVirtualList.ts","components/ReactiveHeight.tsx","hooks/useReactiveHeightVirtualList.ts","utils/BinaryIndexedTree.ts","components/OptimizedReactiveHeight.tsx","hooks/useBinaryIndexedTreeVirtualList.ts","components/NormalList.tsx","utils/data-generator.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["Counter","useState","count","setCount","onClick","FixedHeight","data","itemHeight","itemRender","scrollTop","setScrollTop","clientHeight","setClientHeight","totalHeight","useMemo","length","startIndex","Math","floor","endIndex","visibleData","slice","offset","useFixedHeightVirtualList","containerRef","useRef","handleScroll","useCallback","current","containerRefCallback","node","className","ref","onScroll","style","height","transform","map","key","id","binarySearch","list","target","result","start","end","mid","midValue","PropHeight","estimatedItemHeight","getItemHeight","positions","setPositions","useEffect","initPositions","i","t1","performance","now","ceil","p","t2","console","log","positionsRef","newPositions","firstUpdatedIndex","limit","min","realHeight","forEach","usePropHeightVirtualList","index","ReactiveHeight","itemRefs","updatePositions","getBoundingClientRect","useReactiveHeightVirtualList","filter","Boolean","BinaryIndexedTree","nums","tree","bitMask","this","__init","Array","fill","j","n","sum","tmp","power2le","val","prefixSum","z","idx","len","tIdx","OptimizedReactiveHeight","treeRef","findGe","currentHeight","getValue","update","useBinaryIndexedTreeVirtualList","NormalList","d","dataGen","amount","push","random","toString","substr","value","normalListData","radioButtons","path","text","App","history","useHistory","location","useLocation","item","boxSizing","lineHeight","textAlign","border","itemRenderWithCounter","reactiveHeightItemRender","radio","type","checked","pathname","onChange","exact","to","window","hostname","match","ReactDOM","render","StrictMode","basename","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.e9282035.chunk.js","sourcesContent":["import React, { useState } from 'react'\n\nexport default function Counter () {\n  const [count, setCount] = useState(0)\n\n  return (\n    <span>\n      <span>Count: {count}</span>\n      <button onClick={() => setCount(count + 1)}>Increase</button>\n    </span>\n  )\n}\n","import React, { useCallback, useRef, useState } from 'react'\nimport useFixedHeightVirtualList from '../hooks/useFixedHeightVirtualList'\n\ninterface IProps<T> {\n  data: T[];\n  itemHeight: number;\n  itemRender: (item: T) => JSX.Element\n}\n\nfunction FixedHeight <T>({ data, itemHeight, itemRender }: IProps<T>) {\n  const [scrollTop, setScrollTop] = useState(0)\n  const [clientHeight, setClientHeight] = useState(0)\n\n  const { totalHeight, visibleData, offset } = useFixedHeightVirtualList({\n    data,\n    itemHeight,\n    scrollTop,\n    clientHeight,\n  })\n\n  const containerRef = useRef<HTMLDivElement | null>(null)\n\n  const handleScroll = useCallback(() => {\n    if (containerRef.current) {\n      setScrollTop(containerRef.current.scrollTop)\n    }\n  }, [])\n\n  const containerRefCallback = useCallback((node: HTMLDivElement) => {\n    if (node) {\n      containerRef.current = node\n      setClientHeight(node.clientHeight)\n    } else {\n      containerRef.current = null\n    }\n  }, [])\n\n  return (\n    <div\n      className=\"container\"\n      ref={containerRefCallback}\n      onScroll={handleScroll}\n    >\n      <div\n        className=\"total-list\"\n        style={{ height: `${totalHeight}px` }}\n      ></div>\n      <div\n        className=\"visible-list\"\n        style={{ transform: `translateY(${offset}px)` }}\n      >\n        {visibleData.map((data) => (\n          <div key={(data as any).id} style={{ height: `${itemHeight}px` }}>{itemRender(data)}</div>\n        ))}\n      </div>\n    </div>\n  )\n}\n\nexport default FixedHeight\n","import { useMemo } from 'react'\n\ninterface IParams<T> {\n  data: T[]\n  itemHeight: number\n  scrollTop: number\n  clientHeight: number\n}\n\nexport default function useFixedHeightVirtualList <T> ({\n  data,\n  itemHeight,\n  scrollTop,\n  clientHeight,\n}: IParams<T>) {\n  const totalHeight = useMemo(() => data.length * itemHeight, [data.length, itemHeight])\n  const startIndex = Math.floor(scrollTop / itemHeight)\n  const endIndex = Math.floor(clientHeight / itemHeight) + startIndex + 1\n  const visibleData = useMemo(() => data.slice(startIndex, endIndex), [data, endIndex, startIndex])\n  const offset = useMemo(() => startIndex * itemHeight, [itemHeight, startIndex])\n\n  return {\n    totalHeight,\n    visibleData,\n    offset,\n  }\n}\n","// 二分查找修改，找到最接近且大于等于 target 的索引\n\nexport default function binarySearch (list: number[], target: number): number {\n  const length = list.length\n  if (!length) return -1\n  let result = -1\n  let start = 0\n  let end = length - 1\n  while (start <= end) {\n    if (start === end) return list[start] >= target ? start : -1\n    const mid = (start + end) >> 1\n    const midValue = list[mid]\n    if (midValue === target) return mid\n    if (target < midValue) {\n      if (result === -1 || list[result] > midValue) {\n        result = mid\n      }\n      end--\n    } else {\n      start = mid + 1\n    }\n  }\n  return result\n}\n","import React, { useCallback, useRef, useState } from 'react'\nimport usePropHeightVirtualList from '../hooks/usePropHeightVirtualList'\n\ninterface IProps<T> {\n  data: T[];\n  estimatedItemHeight: number\n  getItemHeight: (index: number) => number\n  itemRender: (item: T) => JSX.Element\n}\n\nfunction PropHeight <T>({ data, estimatedItemHeight, getItemHeight, itemRender }: IProps<T>) {\n  const [scrollTop, setScrollTop] = useState(0)\n  const [clientHeight, setClientHeight] = useState(0)\n\n  const { startIndex, positions, totalHeight, visibleData, offset } = usePropHeightVirtualList({\n    data,\n    estimatedItemHeight,\n    getItemHeight,\n    scrollTop,\n    clientHeight,\n  })\n\n  const containerRef = useRef<HTMLDivElement | null>(null)\n\n  const handleScroll = useCallback(() => {\n    if (containerRef.current) {\n      setScrollTop(containerRef.current.scrollTop)\n    }\n  }, [])\n\n  const containerRefCallback = useCallback((node: HTMLDivElement) => {\n    if (node) {\n      containerRef.current = node\n      setClientHeight(node.clientHeight)\n    } else {\n      containerRef.current = null\n    }\n  }, [])\n\n  return (\n    <div\n      className=\"container\"\n      ref={containerRefCallback}\n      onScroll={handleScroll}\n    >\n      <div\n        className=\"total-list\"\n        style={{ height: `${totalHeight}px` }}\n      ></div>\n      <div\n        className=\"visible-list\"\n        style={{ transform: `translateY(${offset}px)` }}\n      >\n        {visibleData.map((data, index) => (\n          <div key={(data as any).id} style={{ height: `${positions[index + startIndex].height}px` }}>{itemRender(data)}</div>\n        ))}\n      </div>\n    </div>\n  )\n}\n\nexport default PropHeight\n","import { useState, useEffect, useMemo, useRef } from 'react'\nimport binarySearch from '../utils/binary-search'\n\ninterface IParams<T> {\n  data: T[]\n  getItemHeight: (index: number) => number\n  estimatedItemHeight: number\n  scrollTop: number\n  clientHeight: number\n}\n\ninterface IPosition {\n  height: number\n  offset: number\n}\n\nexport default function usePropHeightVirtualList <T> ({\n  data,\n  getItemHeight,\n  estimatedItemHeight,\n  scrollTop,\n  clientHeight,\n}: IParams<T>) {\n  const [positions, setPositions] = useState<IPosition[]>([])\n\n  // 以 `estimatedItemHeight` 初始化 `positions` 数组\n  useEffect(() => {\n    const initPositions: IPosition[] = []\n    const length = data.length\n    for (let i = 0; i < length; i++) {\n      initPositions[i] = {\n        height: estimatedItemHeight,\n        offset: estimatedItemHeight + (initPositions[i - 1]?.offset || 0)\n      }\n    }\n    setPositions(initPositions)\n  }, [data.length, estimatedItemHeight])\n\n  // 二分查找 `startIndex`\n  const t1 = performance.now()\n  const startIndex = binarySearch(positions.slice(0, Math.ceil(scrollTop / estimatedItemHeight) + 1).map((p) => p.offset), scrollTop)\n  const t2 = performance.now()\n  console.log('查找 startIndex 耗时： ', t2 - t1)\n  const endIndex = Math.ceil(clientHeight / estimatedItemHeight) + startIndex + 1\n  const visibleData = useMemo(() => data.slice(startIndex, endIndex), [data, endIndex, startIndex])\n\n  const positionsRef = useRef<IPosition[]>()\n  positionsRef.current = positions\n  // 根据渲染的列表项，获取实际高度并更新 `positions` 数组\n  useEffect(() => {\n    if (!positionsRef.current || !positionsRef.current.length || startIndex === -1) return\n    const positions = positionsRef.current\n    const newPositions: IPosition[] = []\n    let firstUpdatedIndex = -1\n    const limit = Math.min(positions.length - 1, endIndex)\n    const t1 = performance.now()\n    for (let i = startIndex; i <= limit; i++) {\n      const realHeight = getItemHeight(i)\n      if (realHeight !== positions[i].height) {\n        if (firstUpdatedIndex === -1) firstUpdatedIndex = i\n        newPositions[i] = {\n          height: realHeight,\n          // 先随便赋个值，后面再统一更新\n          offset: 0\n        }\n      }\n    }\n    if (firstUpdatedIndex !== -1) {\n      // 有更新的节点\n      positions.forEach((p, i) => {\n        if (!newPositions[i]) newPositions[i] = p\n      })\n      // 从 `firstUpdatedIndex` 开始，更新后面的 `offset`\n      const length = positions.length\n      for (let i = firstUpdatedIndex; i < length; i++) {\n        newPositions[i].offset = newPositions[i].height + (newPositions[i - 1]?.offset || 0)\n      }\n      const t2 = performance.now()\n      console.log('更新缓存耗时： ', t2 - t1)\n      setPositions(newPositions)\n    }\n  }, [endIndex, getItemHeight, startIndex])\n\n  return {\n    startIndex,\n    positions,\n    totalHeight: positions[positions.length - 1]?.offset || 0,\n    visibleData,\n    offset: (positions[startIndex]?.offset || 0) - (positions[startIndex]?.height || 0),\n  }\n}\n","import React, { useCallback, useRef, useState, useEffect } from 'react'\nimport useReactiveHeightVirtualList from '../hooks/useReactiveHeightVirtualList'\n\ninterface IProps<T> {\n  data: T[];\n  estimatedItemHeight: number\n  itemRender: (item: T) => JSX.Element\n}\n\nfunction ReactiveHeight <T>({ data, estimatedItemHeight, itemRender }: IProps<T>) {\n  const [scrollTop, setScrollTop] = useState(0)\n  const [clientHeight, setClientHeight] = useState(0)\n  const itemRefs = useRef<Array<HTMLDivElement | null>>([])\n\n  const { totalHeight, visibleData, offset, updatePositions } = useReactiveHeightVirtualList({\n    data,\n    estimatedItemHeight,\n    scrollTop,\n    clientHeight,\n    itemRefs,\n  })\n\n  const containerRef = useRef<HTMLDivElement | null>(null)\n\n  const handleScroll = useCallback(() => {\n    if (containerRef.current) {\n      setScrollTop(containerRef.current.scrollTop)\n    }\n  }, [])\n\n  const containerRefCallback = useCallback((node: HTMLDivElement) => {\n    if (node) {\n      containerRef.current = node\n      setClientHeight(node.clientHeight)\n    } else {\n      containerRef.current = null\n    }\n  }, [])\n\n  useEffect(() => {\n    if (visibleData) {\n      itemRefs.current = []\n    }\n  }, [visibleData])\n\n  return (\n    <div\n      className=\"container\"\n      ref={containerRefCallback}\n      onScroll={handleScroll}\n    >\n      <div\n        className=\"total-list\"\n        style={{ height: `${totalHeight}px` }}\n      ></div>\n      <div\n        className=\"visible-list\"\n        style={{ transform: `translateY(${offset}px)` }}\n      >\n        {visibleData.map((data, index) => (\n          <div\n            key={(data as any).id}\n            // 有其他办法拿到一组 DOM 吗？\n            ref={(node) => {\n              itemRefs.current[index] = node\n              if (visibleData.length === itemRefs.current.filter(Boolean).length) {\n                updatePositions()\n              }\n            }}\n          >{itemRender(data)}</div>\n        ))}\n      </div>\n    </div>\n  )\n}\n\nexport default ReactiveHeight\n","import { useState, useEffect, useMemo, useCallback } from 'react'\nimport binarySearch from '../utils/binary-search'\n\ninterface IParams<T> {\n  data: T[]\n  estimatedItemHeight: number\n  scrollTop: number\n  clientHeight: number\n  itemRefs: React.MutableRefObject<(HTMLDivElement | null)[]>\n}\n\ninterface IPosition {\n  height: number\n  offset: number\n}\n\nexport default function useReactiveHeightVirtualList <T> ({\n  data,\n  estimatedItemHeight,\n  scrollTop,\n  clientHeight,\n  itemRefs,\n}: IParams<T>) {\n  const [positions, setPositions] = useState<IPosition[]>([])\n\n  // 以 `estimatedItemHeight` 初始化 `positions` 数组\n  useEffect(() => {\n    const initPositions: IPosition[] = []\n    const length = data.length\n    for (let i = 0; i < length; i++) {\n      initPositions[i] = {\n        height: estimatedItemHeight,\n        offset: estimatedItemHeight + (initPositions[i - 1]?.offset || 0)\n      }\n    }\n    setPositions(initPositions)\n  }, [data.length, estimatedItemHeight])\n\n  // 二分查找 `startIndex`\n  const t1 = performance.now()\n  const startIndex = binarySearch(positions.slice(0, Math.ceil(scrollTop / estimatedItemHeight) + 1).map((p) => p.offset), scrollTop)\n  const t2 = performance.now()\n  console.log('查找 startIndex 耗时： ', t2 - t1)\n  const endIndex = Math.ceil(clientHeight / estimatedItemHeight) + startIndex + 1\n  const visibleData = useMemo(() => data.slice(startIndex, endIndex), [data, endIndex, startIndex])\n\n  // 根据渲染的列表项，获取实际高度并更新 `positions` 数组\n  const updatePositions = useCallback(() => {\n    if (!itemRefs.current.length) return\n    if (!positions.length || startIndex === -1) return\n    const newPositions: IPosition[] = []\n    let firstUpdatedIndex = -1\n    const t1 = performance.now()\n    itemRefs.current.forEach((node, index) => {\n      if (node) {\n        const i = index + startIndex\n        const realHeight = node.getBoundingClientRect().height\n        if (realHeight !== positions[i].height) {\n          if (firstUpdatedIndex === -1) firstUpdatedIndex = i\n          newPositions[i] = {\n            height: realHeight,\n            // 先随便赋个值，后面再统一更新\n            offset: 0\n          }\n        }\n      }\n    })\n    if (firstUpdatedIndex !== -1) {\n      // 有更新的节点\n      positions.forEach((p, i) => {\n        if (!newPositions[i]) newPositions[i] = p\n      })\n      // 从 `firstUpdatedIndex` 开始，更新后面的 `offset`\n      const length = positions.length\n      for (let i = firstUpdatedIndex; i < length; i++) {\n        newPositions[i].offset = newPositions[i].height + (newPositions[i - 1]?.offset || 0)\n      }\n      const t2 = performance.now()\n      console.log('更新缓存耗时： ', t2 - t1)\n      setPositions(newPositions)\n    }\n  }, [itemRefs, positions, startIndex])\n\n  return {\n    totalHeight: positions[positions.length - 1]?.offset || 0,\n    visibleData,\n    offset: (positions[startIndex]?.offset || 0) - (positions[startIndex]?.height || 0),\n    updatePositions,\n  }\n}\n","// eslint-disabled\n\n// <= n 的最大的 2^x\nfunction power2le (n: number) {\n  let sum = 1\n  let tmp = 2\n  while (tmp <= n) {\n    sum = tmp\n    tmp = sum << 1\n  }\n  return sum\n}\nclass BinaryIndexedTree {\n  tree!: any[]\n  bitMask!: number\n  constructor(nums: number[]) {\n    this.__init(nums)\n  }\n  // 初始化树状数组，\n  // O(n)\n  __init (nums: number[]) {\n    this.tree = Array(nums.length + 1).fill(0)\n    for (let i = 0; i < nums.length; i++) {\n      this.tree[i + 1] = nums[i]\n    }\n    for (let i = 1; i < this.tree.length; i++) {\n      let j = i + (i & -i)\n      if (j < this.tree.length) {\n        this.tree[j] += this.tree[i]\n      }\n    }\n    this.bitMask = power2le(nums.length - 1)\n  }\n  // 更改第 i 项的, 1<=i<this.tree.length\n  // O(logn)\n  update (i: number, val: any) {\n    while (i < this.tree.length) {\n      this.tree[i] += val;\n      i = i + (i & -i);\n    }\n  }\n  // 计算前 n 项的和 , 1<=n<this.tree.length\n  // O(logn)\n  prefixSum (n = this.tree.length - 1) {\n    let sum = 0\n    while (n > 0) {\n      sum += this.tree[n]\n      n -= n & -n\n    }\n    return sum\n  }\n  // 计算 i ~ j 项的和，\n  // 也可用来获取某个位置的实际值，不过建议使用 getValue 方法，效率更高\n  // 2*O(log n)\n  rangeSum (i: number, j: number | undefined) {\n    return this.prefixSum(j) - this.prefixSum(i - 1)\n  }\n  // 获取第 i 项的实际值， 1<=i<this.tree.length\n  getValue (i: number) {\n    let sum = this.tree[i]\n    if (i > 0) {\n      let z = i - (i & -i)\n      i--\n      while (i !== z) {\n        sum -= this.tree[i]\n        i -= (i & -i)\n      }\n    }\n    return sum\n  }\n  // 找到一个n，其前n项和为 target\n  // 要求数组非负，否则只能前n项迭代计算\n  // 由于存在 0 的情况，满足条件的 n 有多个，返回其中任意一个\n  // O(logn)\n  find (target: number) {\n    let idx = 0\n    let len = this.tree.length\n    let bitMask = this.bitMask\n    while (bitMask !== 0 && (idx < len)) {\n      let tIdx = idx + bitMask\n      if (target === this.tree[tIdx]) {\n        return tIdx\n      } else if (target > this.tree[tIdx]) {\n        idx = tIdx\n        target -= this.tree[tIdx]\n      }\n      bitMask >>= 1\n    }\n    if (target !== 0) {\n      return -1\n    } else {\n      return idx\n    }\n  }\n  // 找到最大的一个n，其前n项和为 target\n  // 要求数组非负，否则只能前n项迭代计算\n  // O(logn)\n  findG (target: number) {\n    let idx = 0\n    let len = this.tree.length\n    let bitMask = this.bitMask\n    while (bitMask !== 0 && (idx < len)) {\n      let tIdx = idx + bitMask\n      if (target >= this.tree[tIdx]) {\n        idx = tIdx\n        target -= this.tree[tIdx]\n      }\n      bitMask >>= 1\n    }\n    if (target !== 0) {\n      return -1\n    } else {\n      return idx\n    }\n  }\n  // 找到最小的一个n，其前n项和大于等于 target\n  // O(logn)\n  findGe (target: number) {\n    let idx = 0\n    let len = this.tree.length\n    let bitMask = this.bitMask\n    while (bitMask !== 0 && (idx < len)) {\n      let tIdx = idx + bitMask\n      if (target === this.tree[tIdx]) {\n        return tIdx\n      } else if (target > this.tree[tIdx]) {\n        idx = tIdx\n        target -= this.tree[tIdx]\n      }\n      bitMask >>= 1\n    }\n    return target === 0 ? idx : (\n      idx + 1 < this.tree.length ? idx + 1 : -1\n    )\n  }\n}\nexport default BinaryIndexedTree","import React, { useCallback, useRef, useState, useEffect } from 'react'\nimport useBinaryIndexedTreeVirtualList from '../hooks/useBinaryIndexedTreeVirtualList'\n\ninterface IProps<T> {\n  data: T[];\n  estimatedItemHeight: number\n  itemRender: (item: T) => JSX.Element\n}\n\nfunction OptimizedReactiveHeight <T>({ data, estimatedItemHeight, itemRender }: IProps<T>) {\n  const [scrollTop, setScrollTop] = useState(0)\n  const [clientHeight, setClientHeight] = useState(0)\n  const itemRefs = useRef<Array<HTMLDivElement | null>>([])\n\n  const { totalHeight, visibleData, offset, updatePositions } = useBinaryIndexedTreeVirtualList({\n    data,\n    estimatedItemHeight,\n    scrollTop,\n    clientHeight,\n    itemRefs,\n  })\n\n  const containerRef = useRef<HTMLDivElement | null>(null)\n\n  const handleScroll = useCallback(() => {\n    if (containerRef.current) {\n      setScrollTop(containerRef.current.scrollTop)\n    }\n  }, [])\n\n  const containerRefCallback = useCallback((node: HTMLDivElement) => {\n    if (node) {\n      containerRef.current = node\n      setClientHeight(node.clientHeight)\n    } else {\n      containerRef.current = null\n    }\n  }, [])\n\n  useEffect(() => {\n    if (visibleData) {\n      itemRefs.current = []\n    }\n  }, [visibleData])\n\n  return (\n    <div\n      className=\"container\"\n      ref={containerRefCallback}\n      onScroll={handleScroll}\n    >\n      <div\n        className=\"total-list\"\n        style={{ height: `${totalHeight}px` }}\n      ></div>\n      <div\n        className=\"visible-list\"\n        style={{ transform: `translateY(${offset}px)` }}\n      >\n        {visibleData.map((data, index) => (\n          <div\n            key={(data as any).id}\n            ref={(node) => {\n              itemRefs.current[index] = node\n              if (visibleData.length === itemRefs.current.filter(Boolean).length) {\n                updatePositions()\n              }\n            }}\n          >{itemRender(data)}</div>\n        ))}\n      </div>\n    </div>\n  )\n}\n\nexport default OptimizedReactiveHeight\n","import { useEffect, useMemo, useCallback, useRef } from 'react'\nimport BinaryIndexedTree from '../utils/BinaryIndexedTree'\n\ninterface IParams<T> {\n  data: T[]\n  estimatedItemHeight: number\n  scrollTop: number\n  clientHeight: number\n  itemRefs: React.MutableRefObject<(HTMLDivElement | null)[]>\n}\n\nexport default function useBinaryIndexedTreeVirtualList <T> ({\n  data,\n  estimatedItemHeight,\n  scrollTop,\n  clientHeight,\n  itemRefs,\n}: IParams<T>) {\n  const treeRef = useRef<BinaryIndexedTree>()\n\n  // 初始化树状数组\n  useEffect(() => {\n    const initPositions: number[] = []\n    const length = data.length\n    for (let i = 0; i < length; i++) {\n      initPositions[i] = estimatedItemHeight\n    }\n    treeRef.current = new BinaryIndexedTree(initPositions)\n  }, [data.length, estimatedItemHeight])\n\n  // 查找 `startIndex`\n  const t1 = performance.now()\n  const startIndex = (treeRef.current?.findGe(scrollTop) || 1) - 1\n  const t2 = performance.now()\n  console.log('查找 startIndex 耗时： ', t2 - t1)\n  const endIndex = Math.ceil(clientHeight / estimatedItemHeight) + startIndex + 1\n  const visibleData = useMemo(() => data.slice(startIndex, endIndex), [data, endIndex, startIndex])\n\n  // 根据渲染的列表项，获取实际高度并更新树状数组\n  const updatePositions = useCallback(() => {\n    if (!itemRefs.current.length) return\n    if (!data.length || startIndex === -1) return\n    const t1 = performance.now()\n    itemRefs.current.forEach((node, index) => {\n      if (node) {\n        const i = index + startIndex\n        const realHeight = node.getBoundingClientRect().height\n        const currentHeight = treeRef.current?.getValue(i + 1) || 0\n        if (realHeight !== currentHeight) {\n          treeRef.current?.update(i + 1, realHeight - currentHeight)\n        }\n      }\n    })\n    const t2 = performance.now()\n    console.log('更新缓存耗时： ', t2 - t1)\n  }, [data.length, itemRefs, startIndex])\n\n  return {\n    totalHeight: treeRef.current?.prefixSum(data.length) || 0,\n    visibleData,\n    offset: treeRef.current?.prefixSum(startIndex) || 0,\n    updatePositions,\n  }\n}\n","import React from 'react'\n\ninterface IProps<T> {\n  data: T[];\n  itemHeight: number;\n  itemRender: (item: T) => JSX.Element\n}\n\nfunction NormalList <T>({ data, itemHeight, itemRender }: IProps<T>) {\n\n  return (\n    <div className=\"container\">\n      <div className=\"visible-list\">\n        {data.map((d) => (\n          <div key={(d as any).id} style={{ height: `${itemHeight}px` }}>{itemRender(d)}</div>\n        ))}\n      </div>\n    </div>\n  )\n}\n\nexport default NormalList\n","export default function dataGen (amount = 200000) {\n  const data = []\n  for (let i = 0; i < amount; i++) {\n    data.push({\n      id: Math.random().toString(36).substr(2),\n      index: i,\n      value: i + 1,\n    })\n  }\n  return data\n}\n","import React, { useCallback } from 'react'\nimport { Switch, Route, useHistory, useLocation, Redirect } from 'react-router-dom'\nimport Counter from './components/Counter'\nimport FixedHeight from './components/FixedHeight'\nimport PropHeight from './components/PropHeight'\nimport ReactiveHeight from './components/ReactiveHeight'\nimport OptimizedReactiveHeight from './components/OptimizedReactiveHeight'\nimport NormalList from './components/NormalList'\nimport dataGen from './utils/data-generator'\n\nconst data = dataGen()\n\nconst normalListData = dataGen(50000)\n\nconst radioButtons = [\n  {\n    path: '/fixed-height',\n    text: '定高',\n  },\n  {\n    path: '/prop-height',\n    text: '不定高（二分）,'\n  },\n  {\n    path: '/reactive-height',\n    text: '自适应（二分）',\n  },\n  {\n    path: '/optimized-reactive-height',\n    text: '自适应（树状数组）',\n  },\n  {\n    path: '/normal-list',\n    text: '普通列表',\n  },\n  {\n    path: '/fixed-height-with-counter',\n    text: '带计数器',\n  },\n]\n\nexport default function App () {\n  const history = useHistory()\n  const location = useLocation()\n\n  const itemRender = useCallback((item) => {\n    return (\n      <div style={{\n        boxSizing: 'border-box',\n        height: '100%',\n        lineHeight: '50px',\n        textAlign: 'center',\n        border: '1px solid black'\n      }}>{item.value}</div>\n    )\n  }, [])\n\n  const itemRenderWithCounter = useCallback((item) => {\n    return (\n      <div style={{\n        boxSizing: 'border-box',\n        height: '100%',\n        lineHeight: '50px',\n        textAlign: 'center',\n        border: '1px solid black'\n      }}>{item.value} | <Counter/></div>\n    )\n  }, [])\n\n  const reactiveHeightItemRender = useCallback((item) => {\n    return (\n      <div style={{\n        boxSizing: 'border-box',\n        height: `${50 + (item.index % 5) * 10}px`,\n        lineHeight: '50px',\n        textAlign: 'center',\n        border: '1px solid black'\n      }}>{item.value}</div>\n    )\n  }, [])\n\n  const getItemHeight = useCallback((index: number) => {\n    return 50 + (index % 5) * 10\n  }, [])\n\n  return (\n    <>\n      <div>\n        {\n          radioButtons.map((radio) => {\n            return (\n              <label key={radio.path}>\n                <input\n                  type=\"radio\"\n                  checked={location.pathname === radio.path}\n                  onChange={() => history.push(radio.path)}\n                />\n                {radio.text}\n              </label>\n            )\n          })\n        }\n      </div>\n      <div style={{ border: '5px solid azure' }}>\n        <Switch>\n          <Route exact path=\"/\">\n            <Redirect to={radioButtons[0].path} />\n          </Route>\n          <Route path=\"/fixed-height\">\n            <FixedHeight\n              data={data}\n              itemHeight={50}\n              itemRender={itemRender}\n            />\n          </Route>\n          <Route path=\"/prop-height\">\n            <PropHeight\n              data={data}\n              estimatedItemHeight={50}\n              getItemHeight={getItemHeight}\n              itemRender={itemRender}\n            />\n          </Route>\n          <Route path=\"/reactive-height\">\n            <ReactiveHeight\n              data={data}\n              estimatedItemHeight={50}\n              itemRender={reactiveHeightItemRender}\n            />\n          </Route>\n          <Route path=\"/optimized-reactive-height\">\n            <OptimizedReactiveHeight\n              data={data}\n              estimatedItemHeight={50}\n              itemRender={reactiveHeightItemRender}\n            />\n          </Route>\n          <Route path=\"/normal-list\">\n            <NormalList\n              data={normalListData}\n              itemHeight={50}\n              itemRender={itemRender}\n            />\n          </Route>\n          <Route path=\"/fixed-height-with-counter\">\n            <FixedHeight\n              data={data}\n              itemHeight={50}\n              itemRender={itemRenderWithCounter}\n            />\n          </Route>\n        </Switch>\n      </div>\n    </>\n  )\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename=\"/virtual-list-demo-react\">\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}